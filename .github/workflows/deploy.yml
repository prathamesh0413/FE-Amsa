name: CI/CD Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # 1Ô∏è‚É£ Checkout Infra (CloudFormation)
    - name: Checkout Infra
      uses: actions/checkout@v3
      with:
        path: infra

    # 2Ô∏è‚É£ Deploy CloudFormation stack
    - name: Deploy CloudFormation
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      with:
        name: AmsaStack
        template: ./infra/amsa-stack.yaml
        capabilities: CAPABILITY_NAMED_IAM
        parameter-overrides: KeyName=${{ secrets.EC2_KEY_NAME }}

    # 3Ô∏è‚É£ Get EC2 Public IP
    - name: Get EC2 Public IP
      id: ec2_ip
      run: |
        IP=$(aws cloudformation describe-stacks \
          --stack-name AmsaStack \
          --query "Stacks[0].Outputs[?OutputKey=='PublicIP'].OutputValue" \
          --output text \
          --region ${{ secrets.AWS_REGION }})
        echo "EC2_IP=$IP" >> $GITHUB_ENV

    # 4Ô∏è‚É£ Checkout Frontend
    - name: Checkout Frontend
      uses: actions/checkout@v3
      with:
        repository: 'prathamesh0413/FE-Amsa'
        path: frontend

    # 5Ô∏è‚É£ Checkout Backend
    - name: Checkout Backend
      uses: actions/checkout@v3
      with:
        repository: 'prathamesh0413/BE-Amsa'
        path: backend

    # 6Ô∏è‚É£ Setup Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    # 7Ô∏è‚É£ Build Frontend
    - name: Build Frontend
      working-directory: frontend
      run: |
        npm install
        npm run build
        npm run export || true  # must generate frontend/out

    # 8Ô∏è‚É£ Verify frontend build exists
    - name: Verify Frontend Build
      run: |
        if [ ! -d frontend/out ]; then
          echo "Error: frontend/out folder missing!"
          exit 1
        fi

    # 9Ô∏è‚É£ Build Backend
    - name: Build Backend
      working-directory: backend
      run: npm install

    # üîü Deploy to EC2
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ env.EC2_IP }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          # Create directories if not exist
          sudo mkdir -p /var/www/amsa-fe
          mkdir -p /home/ubuntu/BE-Amsa
          chown -R ubuntu:ubuntu /home/ubuntu

          # Deploy frontend
          sudo rm -rf /var/www/amsa-fe/*
          sudo cp -r /home/ubuntu/Amsa-website-FE/out/* /var/www/amsa-fe/

          # Deploy backend
          rsync -av --delete ./backend/ /home/ubuntu/BE-Amsa/

          # Restart backend via pm2
          pm2 restart amsa-backend || pm2 start /home/ubuntu/BE-Amsa/server.js --name amsa-backend --watch

          # Reload Nginx
          sudo systemctl reload nginx
          pm2 save
