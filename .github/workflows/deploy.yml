name: CI/CD Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout your workflow repo (needed for CFN template)
    - name: Checkout Repo
      uses: actions/checkout@v3

    # 2. Configure AWS credentials for CloudFormation
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # 3. Deploy CloudFormation Stack (provision EC2, SG, etc.)
    - name: Deploy CloudFormation Stack
      uses: aws-actions/aws-cloudformation-github-deploy@v1.3.0
      with:
        name: AmsaStack
        template: ./cloudformation/amsa-stack.yaml
        capabilities: CAPABILITY_NAMED_IAM
       

    # 4. Checkout Frontend
    - name: Checkout Frontend
      uses: actions/checkout@v3
      with:
        repository: 'prathamesh0413/Amsa-website-FE'
        path: frontend

    # 5. Checkout Backend
    - name: Checkout Backend
      uses: actions/checkout@v3
      with:
        repository: 'prathamesh0413/Amsa-website-BE'
        path: backend

    # 6. Setup Node.js (for local builds)
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    # 7. Build Frontend
    - name: Build Frontend
      working-directory: frontend
      run: |
        npm install
        npm run build
        npm run export || true   # static export if available

    # 8. Build Backend
    - name: Build Backend
      working-directory: backend
      run: npm install

    # 9. Deploy code to EC2 over SSH
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          # Clone repositories if not present
          if [ ! -d "/home/ubuntu/Amsa-website-FE" ]; then
            git clone https://github.com/prathamesh0413/Amsa-website-FE.git /home/ubuntu/Amsa-website-FE
          fi
          if [ ! -d "/home/ubuntu/Amsa-website-BE" ]; then
            git clone https://github.com/prathamesh0413/Amsa-website-BE.git /home/ubuntu/Amsa-website-BE
          fi

          # Pull latest changes
          cd /home/ubuntu/Amsa-website-FE && git pull origin main
          cd /home/ubuntu/Amsa-website-BE && git pull origin main

          # --- Frontend setup (Next.js static build for Nginx) ---
          cd /home/ubuntu/Amsa-website-FE
          npm install
          npm run build
          npm run export || true
          sudo rm -rf /var/www/amsa-fe
          sudo mkdir -p /var/www/amsa-fe
          sudo cp -r out/* /var/www/amsa-fe/

          # --- Backend setup (Node.js API runs on port 3001 via PM2) ---
          cd /home/ubuntu/Amsa-website-BE
          npm install
          pm2 restart amsa-backend || pm2 start server.js --name amsa-backend --watch

          # --- Reload services ---
          sudo systemctl reload nginx
          pm2 save
