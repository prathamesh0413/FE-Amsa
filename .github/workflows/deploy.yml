name: CI/CD Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # 1Ô∏è‚É£ Checkout Frontend
    - name: Checkout Frontend
      uses: actions/checkout@v3
      with:
        repository: 'prathamesh0413/FE-Amsa'
        path: frontend

    # 2Ô∏è‚É£ Checkout Backend
    - name: Checkout Backend
      uses: actions/checkout@v3
      with:
        repository: 'prathamesh0413/BE-Amsa'
        path: backend

    # 3Ô∏è‚É£ Configure AWS credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # 4Ô∏è‚É£ Deploy CloudFormation Stack
    - name: Deploy CloudFormation
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      with:
        name: AmsaStack
        template: ./frontend/cloudformation/amsa-stack.yaml
        capabilities: CAPABILITY_NAMED_IAM
        parameter-overrides: KeyName=${{ secrets.EC2_KEY_NAME }}

    # 5Ô∏è‚É£ Get EC2 Public IP dynamically
    - name: Get EC2 Public IP
      id: ec2_ip
      run: |
        IP=$(aws cloudformation describe-stacks \
          --stack-name AmsaStack \
          --query "Stacks[0].Outputs[?OutputKey=='PublicIP'].OutputValue" \
          --output text)
        echo "EC2_IP=$IP" >> $GITHUB_ENV

    # 6Ô∏è‚É£ Setup Node.js on runner for build
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    # 7Ô∏è‚É£ Build Frontend
    - name: Build Frontend
      working-directory: frontend
      run: |
        npm install
        npm run build
        npm run export || true

    # 8Ô∏è‚É£ Build Backend (install dependencies)
    - name: Build Backend
      working-directory: backend
      run: npm install

    # 9Ô∏è‚É£ Upload Frontend to EC2
    - name: Upload Frontend to EC2
      uses: appleboy/scp-action@master
      with:
        host: ${{ env.EC2_IP }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "frontend/out/*"
        target: "/var/www/amsa-fe/"

    # üîü Upload Backend to EC2
    - name: Upload Backend to EC2
      uses: appleboy/scp-action@master
      with:
        host: ${{ env.EC2_IP }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "backend/*"
        target: "/home/ubuntu/BE-Amsa/"

    # 1Ô∏è‚É£1Ô∏è‚É£ Restart Backend and reload Nginx
    - name: Restart Services on EC2
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ env.EC2_IP }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          cd /home/ubuntu/BE-Amsa
          pm2 restart amsa-backend || pm2 start server.js --name amsa-backend --watch
          sudo systemctl reload nginx
          pm2 save
